<?php
/**
 * @package		awf
 * @copyright	2014 Nicholas K. Dionysopoulos / Akeeba Ltd 
 * @license		GNU GPL version 3 or later
 */

namespace Awf\Platform\Joomla\Container;

use Awf\Database\Driver;

/**
 * A Container suitable for Joomla! integration
 *
 * @package Awf\Platform\Joomla\Container
 */
class Container extends \Awf\Container\Container
{
	public function __construct(array $values = array())
	{
		// Session Manager service
		if (!isset($this['session']))
		{
			$this['session'] = function ()
			{
				return new \Awf\Platform\Joomla\Session\Manager(
					new \Awf\Platform\Joomla\Session\SegmentFactory,
					new \Awf\Platform\Joomla\Session\CsrfTokenFactory()
				);
			};
		}

		// Application Session Segment service
		if (!isset($this['segment']))
		{
			$this['segment'] = function (Container $c)
			{
				if (empty($c->session_segment_name))
				{
					$c->session_segment_name = $c->application_name;
				}

				return $c->session->newSegment($c->session_segment_name);
			};
		}

		// Database Driver service
		if (!isset($this['db']))
		{
			$this['db'] = function (Container $c)
			{
				$db = \JFactory::getDbo();

				$options = array(
					'connection'		=> $db->getConnection(),
					'prefix'			=> $db->getPrefix(),
					'driver'			=> 'mysqli',
				);

				switch($db->name) {
					case 'mysql':
						$options['driver'] = 'Mysql';
						break;

					default:
					case 'mysqli':
						$options['driver'] = 'Mysqli';
						break;

					case 'sqlsrv':
					case 'mssql':
					case 'sqlazure':
						$options['driver'] = 'Sqlsrv';
						break;

					case 'postgresql':
						$options['driver'] = 'Postgresql';
						break;

					case 'pdo':
						$options['driver'] = 'Pdo';
						break;

					case 'sqlite':
						$options['driver'] = 'Sqlite';
						break;
				}

				return Driver::getInstance($options);
			};
		}

		return parent::__construct($values); // TODO: Change the autogenerated stub
	}
} 